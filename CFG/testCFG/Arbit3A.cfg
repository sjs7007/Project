
;; Function main (main)

Merging blocks 26 and 27
main ()
{
  int sum[10][10];
  int second[10][10];
  int first[10][10];
  int d;
  int c;
  int n;
  int m;
  int D.1770;
  int m.21;
  int n.20;
  const char * restrict D.1767;
  int D.1766;
  int d.19;
  int c.18;
  int m.17;
  int n.16;
  int D.1761;
  int D.1760;
  int d.15;
  int c.14;
  int D.1757;
  int d.13;
  int c.12;
  int d.11;
  int c.10;
  int m.9;
  int n.8;
  const char * restrict D.1750;
  int * D.1749;
  unsigned int D.1748;
  unsigned int D.1747;
  unsigned int d.7;
  unsigned int D.1745;
  unsigned int c.6;
  int * second.5;
  int m.4;
  int n.3;
  const char * restrict D.1740;
  int * D.1739;
  unsigned int D.1738;
  unsigned int D.1737;
  unsigned int d.2;
  unsigned int D.1735;
  unsigned int c.1;
  int * first.0;
  const char * restrict D.1732;

<bb 2>:
  __builtin_puts (&"Enter the number of rows and columns of matrix"[0]);
  D.1732 = (const char * restrict) "%d%d";
  scanf (D.1732, &m, &n);
  __builtin_puts (&"Enter the elements of first matrix"[0]);
  c = 0;
  goto <bb 7>;

<bb 3>:
  d = 0;
  goto <bb 5>;

<bb 4>:
  first.0 = (int *) &first;
  c.1 = (unsigned int) c;
  D.1735 = c.1 * 10;
  d.2 = (unsigned int) d;
  D.1737 = D.1735 + d.2;
  D.1738 = D.1737 * 4;
  D.1739 = first.0 + D.1738;
  D.1740 = (const char * restrict) "%d";
  scanf (D.1740, D.1739);
  d = d + 1;

<bb 5>:
  n.3 = n;
  if (d < n.3)
    goto <bb 4>;
  else
    goto <bb 6>;

<bb 6>:
  c = c + 1;

<bb 7>:
  m.4 = m;
  if (c < m.4)
    goto <bb 3>;
  else
    goto <bb 8>;

<bb 8>:
  __builtin_puts (&"Enter the elements of second matrix"[0]);
  c = 0;
  goto <bb 13>;

<bb 9>:
  d = 0;
  goto <bb 11>;

<bb 10>:
  second.5 = (int *) &second;
  c.6 = (unsigned int) c;
  D.1745 = c.6 * 10;
  d.7 = (unsigned int) d;
  D.1747 = D.1745 + d.7;
  D.1748 = D.1747 * 4;
  D.1749 = second.5 + D.1748;
  D.1750 = (const char * restrict) "%d";
  scanf (D.1750, D.1749);
  d = d + 1;

<bb 11>:
  n.8 = n;
  if (d < n.8)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 12>:
  c = c + 1;

<bb 13>:
  m.9 = m;
  if (c < m.9)
    goto <bb 9>;
  else
    goto <bb 14>;

<bb 14>:
  c = 0;
  goto <bb 19>;

<bb 15>:
  d = 0;
  goto <bb 17>;

<bb 16>:
  c.10 = c;
  d.11 = d;
  c.12 = c;
  d.13 = d;
  D.1757 = first[c.12][d.13];
  c.14 = c;
  d.15 = d;
  D.1760 = second[c.14][d.15];
  D.1761 = D.1757 + D.1760;
  sum[c.10][d.11] = D.1761;
  d = d + 1;

<bb 17>:
  n.16 = n;
  if (d < n.16)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 18>:
  c = c + 1;

<bb 19>:
  m.17 = m;
  if (c < m.17)
    goto <bb 15>;
  else
    goto <bb 20>;

<bb 20>:
  __builtin_puts (&"Sum of entered matrices:-"[0]);
  c = 0;
  goto <bb 25>;

<bb 21>:
  d = 0;
  goto <bb 23>;

<bb 22>:
  c.18 = c;
  d.19 = d;
  D.1766 = sum[c.18][d.19];
  D.1767 = (const char * restrict) "%d\t";
  printf (D.1767, D.1766);
  d = d + 1;

<bb 23>:
  n.20 = n;
  if (d < n.20)
    goto <bb 22>;
  else
    goto <bb 24>;

<bb 24>:
  __builtin_putchar (10);
  c = c + 1;

<bb 25>:
  m.21 = m;
  if (c < m.21)
    goto <bb 21>;
  else
    goto <bb 26>;

<bb 26>:
  D.1770 = 0;
  return D.1770;

}


