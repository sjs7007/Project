
;; Function main (main)

Merging blocks 31 and 32
main ()
{
  int multiply[10][10];
  int second[10][10];
  int first[10][10];
  int sum;
  int k;
  int d;
  int c;
  int q;
  int p;
  int n;
  int m;
  int D.1784;
  int m.24;
  int q.23;
  const char * restrict D.1781;
  int D.1780;
  int d.22;
  int c.21;
  int m.20;
  int q.19;
  int d.18;
  int c.17;
  int p.16;
  int D.1772;
  int D.1771;
  int d.15;
  int k.14;
  int D.1768;
  int k.13;
  int c.12;
  int p.11;
  int q.10;
  const char * restrict D.1763;
  int * D.1762;
  unsigned int D.1761;
  unsigned int D.1760;
  unsigned int d.9;
  unsigned int D.1758;
  unsigned int c.8;
  int * second.7;
  int p.6;
  int n.5;
  const char * restrict D.1750;
  int m.4;
  int n.3;
  const char * restrict D.1747;
  int * D.1746;
  unsigned int D.1745;
  unsigned int D.1744;
  unsigned int d.2;
  unsigned int D.1742;
  unsigned int c.1;
  int * first.0;
  const char * restrict D.1739;

<bb 2>:
  sum = 0;
  __builtin_puts (&"Enter the number of rows and columns of first matrix"[0]);
  D.1739 = (const char * restrict) "%d%d";
  scanf (D.1739, &m, &n);
  __builtin_puts (&"Enter the elements of first matrix"[0]);
  c = 0;
  goto <bb 7>;

<bb 3>:
  d = 0;
  goto <bb 5>;

<bb 4>:
  first.0 = (int *) &first;
  c.1 = (unsigned int) c;
  D.1742 = c.1 * 10;
  d.2 = (unsigned int) d;
  D.1744 = D.1742 + d.2;
  D.1745 = D.1744 * 4;
  D.1746 = first.0 + D.1745;
  D.1747 = (const char * restrict) "%d";
  scanf (D.1747, D.1746);
  d = d + 1;

<bb 5>:
  n.3 = n;
  if (d < n.3)
    goto <bb 4>;
  else
    goto <bb 6>;

<bb 6>:
  c = c + 1;

<bb 7>:
  m.4 = m;
  if (c < m.4)
    goto <bb 3>;
  else
    goto <bb 8>;

<bb 8>:
  __builtin_puts (&"Enter the number of rows and columns of second matrix"[0]);
  D.1750 = (const char * restrict) "%d%d";
  scanf (D.1750, &p, &q);
  n.5 = n;
  p.6 = p;
  if (n.5 != p.6)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  __builtin_puts (&"Matrices with entered orders can\'t be multiplied with each other."[0]);
  goto <bb 31>;

<bb 10>:
  __builtin_puts (&"Enter the elements of second matrix"[0]);
  c = 0;
  goto <bb 15>;

<bb 11>:
  d = 0;
  goto <bb 13>;

<bb 12>:
  second.7 = (int *) &second;
  c.8 = (unsigned int) c;
  D.1758 = c.8 * 10;
  d.9 = (unsigned int) d;
  D.1760 = D.1758 + d.9;
  D.1761 = D.1760 * 4;
  D.1762 = second.7 + D.1761;
  D.1763 = (const char * restrict) "%d";
  scanf (D.1763, D.1762);
  d = d + 1;

<bb 13>:
  q.10 = q;
  if (d < q.10)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 14>:
  c = c + 1;

<bb 15>:
  p.11 = p;
  if (c < p.11)
    goto <bb 11>;
  else
    goto <bb 16>;

<bb 16>:
  c = 0;
  goto <bb 24>;

<bb 17>:
  d = 0;
  goto <bb 22>;

<bb 18>:
  k = 0;
  goto <bb 20>;

<bb 19>:
  c.12 = c;
  k.13 = k;
  D.1768 = first[c.12][k.13];
  k.14 = k;
  d.15 = d;
  D.1771 = second[k.14][d.15];
  D.1772 = D.1768 * D.1771;
  sum = D.1772 + sum;
  k = k + 1;

<bb 20>:
  p.16 = p;
  if (k < p.16)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 21>:
  c.17 = c;
  d.18 = d;
  multiply[c.17][d.18] = sum;
  sum = 0;
  d = d + 1;

<bb 22>:
  q.19 = q;
  if (d < q.19)
    goto <bb 18>;
  else
    goto <bb 23>;

<bb 23>:
  c = c + 1;

<bb 24>:
  m.20 = m;
  if (c < m.20)
    goto <bb 17>;
  else
    goto <bb 25>;

<bb 25>:
  __builtin_puts (&"Product of entered matrices:-"[0]);
  c = 0;
  goto <bb 30>;

<bb 26>:
  d = 0;
  goto <bb 28>;

<bb 27>:
  c.21 = c;
  d.22 = d;
  D.1780 = multiply[c.21][d.22];
  D.1781 = (const char * restrict) "%d\t";
  printf (D.1781, D.1780);
  d = d + 1;

<bb 28>:
  q.23 = q;
  if (d < q.23)
    goto <bb 27>;
  else
    goto <bb 29>;

<bb 29>:
  __builtin_putchar (10);
  c = c + 1;

<bb 30>:
  m.24 = m;
  if (c < m.24)
    goto <bb 26>;
  else
    goto <bb 31>;

<bb 31>:
  D.1784 = 0;
  return D.1784;

}


