
;; Function main (main)

Merging blocks 49 and 50
main ()
{
  int p;
  int o;
  int n;
  int m;
  int sum;
  int k;
  int j;
  int i;
  int c[5][5];
  int b[5][5];
  int a[5][5];
  int D.1824;
  int m.36;
  int p.35;
  const char * restrict D.1821;
  int D.1820;
  int j.34;
  int i.33;
  int m.32;
  int p.31;
  int j.30;
  int i.29;
  int n.28;
  int D.1812;
  int D.1811;
  int j.27;
  int k.26;
  int D.1808;
  int k.25;
  int i.24;
  int m.23;
  int p.22;
  int j.21;
  int i.20;
  int o.19;
  int p.18;
  const char * restrict D.1799;
  int D.1798;
  int j.17;
  int i.16;
  int m.15;
  int n.14;
  const char * restrict D.1793;
  int D.1792;
  int j.13;
  int i.12;
  int o.11;
  int p.10;
  const char * restrict D.1787;
  int * D.1786;
  unsigned int D.1785;
  unsigned int D.1784;
  unsigned int j.9;
  unsigned int D.1782;
  unsigned int i.8;
  int * b.7;
  const char * restrict D.1779;
  int m.6;
  int n.5;
  const char * restrict D.1776;
  int * D.1775;
  unsigned int D.1774;
  unsigned int D.1773;
  unsigned int j.4;
  unsigned int D.1771;
  unsigned int i.3;
  int * a.2;
  const char * restrict D.1768;
  const char * restrict D.1766;
  const char * restrict D.1765;
  int o.1;
  int n.0;
  const char * restrict D.1760;
  const char * restrict D.1759;
  const char * restrict D.1758;
  const char * restrict D.1757;

<bb 2>:
  sum = 0;
  D.1757 = (const char * restrict) "\nEnter the row and column of first matrix";
  printf (D.1757);
  D.1758 = (const char * restrict) "%d %d";
  scanf (D.1758, &m, &n);
  D.1759 = (const char * restrict) "\nEnter the row and column of second matrix";
  printf (D.1759);
  D.1760 = (const char * restrict) "%d %d";
  scanf (D.1760, &o, &p);
  n.0 = n;
  o.1 = o;
  if (n.0 != o.1)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.1765 = (const char * restrict) "Matrix mutiplication is not possible";
  printf (D.1765);
  D.1766 = (const char * restrict) "\nColumn of first matrix must be same as row of second matrix";
  printf (D.1766);
  goto <bb 43>;

<bb 4>:
  D.1768 = (const char * restrict) "\nEnter the First matrix->";
  printf (D.1768);
  i = 0;
  goto <bb 9>;

<bb 5>:
  j = 0;
  goto <bb 7>;

<bb 6>:
  a.2 = (int *) &a;
  i.3 = (unsigned int) i;
  D.1771 = i.3 * 5;
  j.4 = (unsigned int) j;
  D.1773 = D.1771 + j.4;
  D.1774 = D.1773 * 4;
  D.1775 = a.2 + D.1774;
  D.1776 = (const char * restrict) "%d";
  scanf (D.1776, D.1775);
  j = j + 1;

<bb 7>:
  n.5 = n;
  if (j < n.5)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 8>:
  i = i + 1;

<bb 9>:
  m.6 = m;
  if (i < m.6)
    goto <bb 5>;
  else
    goto <bb 10>;

<bb 10>:
  D.1779 = (const char * restrict) "\nEnter the Second matrix->";
  printf (D.1779);
  i = 0;
  goto <bb 15>;

<bb 11>:
  j = 0;
  goto <bb 13>;

<bb 12>:
  b.7 = (int *) &b;
  i.8 = (unsigned int) i;
  D.1782 = i.8 * 5;
  j.9 = (unsigned int) j;
  D.1784 = D.1782 + j.9;
  D.1785 = D.1784 * 4;
  D.1786 = b.7 + D.1785;
  D.1787 = (const char * restrict) "%d";
  scanf (D.1787, D.1786);
  j = j + 1;

<bb 13>:
  p.10 = p;
  if (j < p.10)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 14>:
  i = i + 1;

<bb 15>:
  o.11 = o;
  if (i < o.11)
    goto <bb 11>;
  else
    goto <bb 16>;

<bb 16>:
  __builtin_puts (&"\nThe First matrix is"[0]);
  i = 0;
  goto <bb 21>;

<bb 17>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 19>;

<bb 18>:
  i.12 = i;
  j.13 = j;
  D.1792 = a[i.12][j.13];
  D.1793 = (const char * restrict) "%d\t";
  printf (D.1793, D.1792);
  j = j + 1;

<bb 19>:
  n.14 = n;
  if (j < n.14)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 20>:
  i = i + 1;

<bb 21>:
  m.15 = m;
  if (i < m.15)
    goto <bb 17>;
  else
    goto <bb 22>;

<bb 22>:
  __builtin_puts (&"\nThe Second matrix is"[0]);
  i = 0;
  goto <bb 27>;

<bb 23>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 25>;

<bb 24>:
  i.16 = i;
  j.17 = j;
  D.1798 = b[i.16][j.17];
  D.1799 = (const char * restrict) "%d\t";
  printf (D.1799, D.1798);
  j = j + 1;

<bb 25>:
  p.18 = p;
  if (j < p.18)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 26>:
  i = i + 1;

<bb 27>:
  o.19 = o;
  if (i < o.19)
    goto <bb 23>;
  else
    goto <bb 28>;

<bb 28>:
  i = 0;
  goto <bb 33>;

<bb 29>:
  j = 0;
  goto <bb 31>;

<bb 30>:
  i.20 = i;
  j.21 = j;
  c[i.20][j.21] = 0;
  j = j + 1;

<bb 31>:
  p.22 = p;
  if (j < p.22)
    goto <bb 30>;
  else
    goto <bb 32>;

<bb 32>:
  i = i + 1;

<bb 33>:
  m.23 = m;
  if (i < m.23)
    goto <bb 29>;
  else
    goto <bb 34>;

<bb 34>:
  i = 0;
  goto <bb 42>;

<bb 35>:
  j = 0;
  goto <bb 40>;

<bb 36>:
  sum = 0;
  k = 0;
  goto <bb 38>;

<bb 37>:
  i.24 = i;
  k.25 = k;
  D.1808 = a[i.24][k.25];
  k.26 = k;
  j.27 = j;
  D.1811 = b[k.26][j.27];
  D.1812 = D.1808 * D.1811;
  sum = D.1812 + sum;
  k = k + 1;

<bb 38>:
  n.28 = n;
  if (k < n.28)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 39>:
  i.29 = i;
  j.30 = j;
  c[i.29][j.30] = sum;
  j = j + 1;

<bb 40>:
  p.31 = p;
  if (j < p.31)
    goto <bb 36>;
  else
    goto <bb 41>;

<bb 41>:
  i = i + 1;

<bb 42>:
  m.32 = m;
  if (i < m.32)
    goto <bb 35>;
  else
    goto <bb 43>;

<bb 43>:
  __builtin_puts (&"\nThe multiplication of two matrix is"[0]);
  i = 0;
  goto <bb 48>;

<bb 44>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 46>;

<bb 45>:
  i.33 = i;
  j.34 = j;
  D.1820 = c[i.33][j.34];
  D.1821 = (const char * restrict) "%d\t";
  printf (D.1821, D.1820);
  j = j + 1;

<bb 46>:
  p.35 = p;
  if (j < p.35)
    goto <bb 45>;
  else
    goto <bb 47>;

<bb 47>:
  i = i + 1;

<bb 48>:
  m.36 = m;
  if (i < m.36)
    goto <bb 44>;
  else
    goto <bb 49>;

<bb 49>:
  D.1824 = 0;
  return D.1824;

}


