
;; Function main (main)

Merging blocks 40 and 41
main ()
{
  int k;
  int j;
  int i;
  int c2;
  int r2;
  int c1;
  int r1;
  int mult[10][10];
  int b[10][10];
  int a[10][10];
  int D.1813;
  int r1.31;
  int c2.30;
  int D.1808;
  int c2.29;
  const char * restrict D.1806;
  int D.1805;
  int j.28;
  int i.27;
  int r1.26;
  int c2.25;
  int c1.24;
  int D.1799;
  int D.1798;
  int D.1797;
  int j.23;
  int k.22;
  int D.1794;
  int k.21;
  int i.20;
  int D.1791;
  int j.19;
  int i.18;
  int j.17;
  int i.16;
  int r1.15;
  int c2.14;
  int j.13;
  int i.12;
  int r2.11;
  int c2.10;
  const char * restrict D.1780;
  int * D.1779;
  unsigned int D.1778;
  unsigned int D.1777;
  unsigned int j.9;
  unsigned int D.1775;
  unsigned int i.8;
  int * b.7;
  const char * restrict D.1772;
  int D.1771;
  int D.1770;
  int r1.6;
  int c1.5;
  const char * restrict D.1767;
  int * D.1766;
  unsigned int D.1765;
  unsigned int D.1764;
  unsigned int j.4;
  unsigned int D.1762;
  unsigned int i.3;
  int * a.2;
  const char * restrict D.1759;
  int D.1758;
  int D.1757;
  int r2.1;
  int c1.0;
  const char * restrict D.1754;
  const char * restrict D.1753;
  const char * restrict D.1752;
  const char * restrict D.1751;
  const char * restrict D.1750;
  const char * restrict D.1749;
  const char * restrict D.1748;
  const char * restrict D.1747;

<bb 2>:
  D.1747 = (const char * restrict) "Enter rows and column for first matrix: ";
  printf (D.1747);
  D.1748 = (const char * restrict) "%d%d";
  scanf (D.1748, &r1, &c1);
  D.1749 = (const char * restrict) "Enter rows and column for second matrix: ";
  printf (D.1749);
  D.1750 = (const char * restrict) "%d%d";
  scanf (D.1750, &r2, &c2);
  goto <bb 4>;

<bb 3>:
  __builtin_puts (&"Error! column of first matrix not equal to row of second."[0]);
  D.1751 = (const char * restrict) "Enter rows and column for first matrix: ";
  printf (D.1751);
  D.1752 = (const char * restrict) "%d%d";
  scanf (D.1752, &r1, &c1);
  D.1753 = (const char * restrict) "Enter rows and column for second matrix: ";
  printf (D.1753);
  D.1754 = (const char * restrict) "%d%d";
  scanf (D.1754, &r2, &c2);

<bb 4>:
  c1.0 = c1;
  r2.1 = r2;
  if (c1.0 != r2.1)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  __builtin_puts (&"\nEnter elements of matrix 1:"[0]);
  i = 0;
  goto <bb 10>;

<bb 6>:
  j = 0;
  goto <bb 8>;

<bb 7>:
  D.1757 = j + 1;
  D.1758 = i + 1;
  D.1759 = (const char * restrict) "Enter elements a%d%d: ";
  printf (D.1759, D.1758, D.1757);
  a.2 = (int *) &a;
  i.3 = (unsigned int) i;
  D.1762 = i.3 * 10;
  j.4 = (unsigned int) j;
  D.1764 = D.1762 + j.4;
  D.1765 = D.1764 * 4;
  D.1766 = a.2 + D.1765;
  D.1767 = (const char * restrict) "%d";
  scanf (D.1767, D.1766);
  j = j + 1;

<bb 8>:
  c1.5 = c1;
  if (j < c1.5)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 9>:
  i = i + 1;

<bb 10>:
  r1.6 = r1;
  if (i < r1.6)
    goto <bb 6>;
  else
    goto <bb 11>;

<bb 11>:
  __builtin_puts (&"\nEnter elements of matrix 2:"[0]);
  i = 0;
  goto <bb 16>;

<bb 12>:
  j = 0;
  goto <bb 14>;

<bb 13>:
  D.1770 = j + 1;
  D.1771 = i + 1;
  D.1772 = (const char * restrict) "Enter elements b%d%d: ";
  printf (D.1772, D.1771, D.1770);
  b.7 = (int *) &b;
  i.8 = (unsigned int) i;
  D.1775 = i.8 * 10;
  j.9 = (unsigned int) j;
  D.1777 = D.1775 + j.9;
  D.1778 = D.1777 * 4;
  D.1779 = b.7 + D.1778;
  D.1780 = (const char * restrict) "%d";
  scanf (D.1780, D.1779);
  j = j + 1;

<bb 14>:
  c2.10 = c2;
  if (j < c2.10)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 15>:
  i = i + 1;

<bb 16>:
  r2.11 = r2;
  if (i < r2.11)
    goto <bb 12>;
  else
    goto <bb 17>;

<bb 17>:
  i = 0;
  goto <bb 22>;

<bb 18>:
  j = 0;
  goto <bb 20>;

<bb 19>:
  i.12 = i;
  j.13 = j;
  mult[i.12][j.13] = 0;
  j = j + 1;

<bb 20>:
  c2.14 = c2;
  if (j < c2.14)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 21>:
  i = i + 1;

<bb 22>:
  r1.15 = r1;
  if (i < r1.15)
    goto <bb 18>;
  else
    goto <bb 23>;

<bb 23>:
  i = 0;
  goto <bb 31>;

<bb 24>:
  j = 0;
  goto <bb 29>;

<bb 25>:
  k = 0;
  goto <bb 27>;

<bb 26>:
  i.16 = i;
  j.17 = j;
  i.18 = i;
  j.19 = j;
  D.1791 = mult[i.18][j.19];
  i.20 = i;
  k.21 = k;
  D.1794 = a[i.20][k.21];
  k.22 = k;
  j.23 = j;
  D.1797 = b[k.22][j.23];
  D.1798 = D.1794 * D.1797;
  D.1799 = D.1791 + D.1798;
  mult[i.16][j.17] = D.1799;
  k = k + 1;

<bb 27>:
  c1.24 = c1;
  if (k < c1.24)
    goto <bb 26>;
  else
    goto <bb 28>;

<bb 28>:
  j = j + 1;

<bb 29>:
  c2.25 = c2;
  if (j < c2.25)
    goto <bb 25>;
  else
    goto <bb 30>;

<bb 30>:
  i = i + 1;

<bb 31>:
  r1.26 = r1;
  if (i < r1.26)
    goto <bb 24>;
  else
    goto <bb 32>;

<bb 32>:
  __builtin_puts (&"\nOutput Matrix:"[0]);
  i = 0;
  goto <bb 39>;

<bb 33>:
  j = 0;
  goto <bb 37>;

<bb 34>:
  i.27 = i;
  j.28 = j;
  D.1805 = mult[i.27][j.28];
  D.1806 = (const char * restrict) "%d  ";
  printf (D.1806, D.1805);
  c2.29 = c2;
  D.1808 = c2.29 + -1;
  if (D.1808 == j)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  __builtin_puts (&"\n"[0]);

<bb 36>:
  j = j + 1;

<bb 37>:
  c2.30 = c2;
  if (j < c2.30)
    goto <bb 34>;
  else
    goto <bb 38>;

<bb 38>:
  i = i + 1;

<bb 39>:
  r1.31 = r1;
  if (i < r1.31)
    goto <bb 33>;
  else
    goto <bb 40>;

<bb 40>:
  D.1813 = 0;
  return D.1813;

}


