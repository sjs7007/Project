/* http://www.programiz.com/article/insertion-sort-algorithm-programming */

/*Sorting Elements of an array in ascending order using insertion sort algorithm*/
#include<stdio.h>
int main()
{
	int data[100],n,temp,i,j;
	printf("Enter number of terms(should be less than 100): ");
	scanf("%d",&n);
	printf("Enter elements: ");
	for(i=0;i<n;i++)
	{
		scanf("%d",&data[i]);
	}
	for(i=1;i<n;i++)
	{
		temp = data[i];
		j=i-1;
		while(temp<data[j] && j>=0)
/*To sort elements in descending order, change temp<data[j] to temp>data[j] in above line.*/
		{
			data[j+1] = data[j];
			--j;
		}
		data[j+1]=temp;
	}
	printf("In ascending order: ");
	for(i=0; i<n; i++)
		printf("%d\t",data[i]);
    return 0;
}

--------------------------------------------------

;; Function main (main)

Merging blocks 15 and 16
main ()
{
  int j;
  int i;
  int temp;
  int n;
  int data[100];
  int D.1740;
  int n.7;
  const char * restrict D.1738;
  int D.1737;
  int i.6;
  const char * restrict D.1735;
  int n.5;
  int D.1733;
  int D.1731;
  int j.4;
  int D.1729;
  int j.3;
  int D.1727;
  int i.2;
  int n.1;
  const char * restrict D.1724;
  int * D.1723;
  unsigned int D.1722;
  unsigned int i.0;
  const char * restrict D.1720;
  const char * restrict D.1719;
  const char * restrict D.1718;

<bb 2>:
  D.1718 = (const char * restrict) "Enter number of terms(should be less than 100): ";
  printf (D.1718);
  D.1719 = (const char * restrict) "%d";
  scanf (D.1719, &n);
  D.1720 = (const char * restrict) "Enter elements: ";
  printf (D.1720);
  i = 0;
  goto <bb 4>;

<bb 3>:
  i.0 = (unsigned int) i;
  D.1722 = i.0 * 4;
  D.1723 = &data + D.1722;
  D.1724 = (const char * restrict) "%d";
  scanf (D.1724, D.1723);
  i = i + 1;

<bb 4>:
  n.1 = n;
  if (i < n.1)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  i = 1;
  goto <bb 11>;

<bb 6>:
  i.2 = i;
  temp = data[i.2];
  j = i + -1;
  goto <bb 8>;

<bb 7>:
  D.1727 = j + 1;
  j.3 = j;
  D.1729 = data[j.3];
  data[D.1727] = D.1729;
  j = j + -1;

<bb 8>:
  j.4 = j;
  D.1731 = data[j.4];
  if (D.1731 > temp)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  if (j >= 0)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 10>:
  D.1733 = j + 1;
  data[D.1733] = temp;
  i = i + 1;

<bb 11>:
  n.5 = n;
  if (i < n.5)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 12>:
  D.1735 = (const char * restrict) "In ascending order: ";
  printf (D.1735);
  i = 0;
  goto <bb 14>;

<bb 13>:
  i.6 = i;
  D.1737 = data[i.6];
  D.1738 = (const char * restrict) "%d\t";
  printf (D.1738, D.1737);
  i = i + 1;

<bb 14>:
  n.7 = n;
  if (i < n.7)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 15>:
  D.1740 = 0;
  return D.1740;

}



--------------------------------------------------
Identifier of type integer found : j
Identifier of type integer found : i
Identifier of type integer found : temp
Identifier of type integer found : n
Integer Array Declaration : int data[100]
Identifier of type integer found : D.1740
Identifier of type integer found : n.7
Identifier of type integer found : D.1737
Identifier of type integer found : i.6
Identifier of type integer found : n.5
Identifier of type integer found : D.1733
Identifier of type integer found : D.1731
Identifier of type integer found : j.4
Identifier of type integer found : D.1729
Identifier of type integer found : j.3
Identifier of type integer found : D.1727
Identifier of type integer found : i.2
Identifier of type integer found : n.1
Identifier of type integer found : D.1723
Identifier of type integer found : D.1722
Identifier of type integer found : i.0

Block : <bb 2>
printf(...)
printf(...)
printf(...)
i = <integerValue>

Block : <bb 3>
i.0 = <integerValue>
D.1722 = <integerValue>
D.1723 = <integerValue>
printf(...)
i = <integerValue>

Block : <bb 4>
n.1 = <integerValue>
if i< <integerValue>, goto <bb 3>,else, goto <bb 5>

Block : <bb 5>
i = <integerValue>

Block : <bb 6>
i.2 = <integerValue>
temp = <integerValue>
j = <integerValue>

Block : <bb 7>
D.1727 = <integerValue>
j.3 = <integerValue>
D.1729 = <integerValue>
data[D.1727] = <integerValue>
j = <integerValue>

Block : <bb 8>
j.4 = <integerValue>
D.1731 = <integerValue>
if D.1731> <integerValue>, goto <bb 9>,else, goto <bb 10>

Block : <bb 9>
if j>= <integerValue>, goto <bb 7>,else, goto <bb 10>

Block : <bb 10>
D.1733 = <integerValue>
data[D.1733] = <integerValue>
i = <integerValue>

Block : <bb 11>
n.5 = <integerValue>
if i< <integerValue>, goto <bb 6>,else, goto <bb 12>

Block : <bb 12>
printf(...)
i = <integerValue>

Block : <bb 13>
i.6 = <integerValue>
D.1737 = <integerValue>
printf(...)
i = <integerValue>

Block : <bb 14>
n.7 = <integerValue>
if i< <integerValue>, goto <bb 13>,else, goto <bb 15>

Block : <bb 15>
D.1740 = <integerValue>

Symbol table : -
Symbol 0 : j, Value : <integerValue>
Symbol 1 : i, Value : <integerValue>
Symbol 2 : temp, Value : <integerValue>
Symbol 3 : n, Value : <integerValue>
Symbol 4 : D.1740, Value : <integerValue>
Symbol 5 : n.7, Value : <integerValue>
Symbol 6 : D.1737, Value : <integerValue>
Symbol 7 : i.6, Value : <integerValue>
Symbol 8 : n.5, Value : <integerValue>
Symbol 9 : D.1733, Value : <integerValue>
Symbol 10 : D.1731, Value : <integerValue>
Symbol 11 : j.4, Value : <integerValue>
Symbol 12 : D.1729, Value : <integerValue>
Symbol 13 : j.3, Value : <integerValue>
Symbol 14 : D.1727, Value : <integerValue>
Symbol 15 : i.2, Value : <integerValue>
Symbol 16 : n.1, Value : <integerValue>
Symbol 17 : D.1723, Value : <integerValue>
Symbol 18 : D.1722, Value : <integerValue>
Symbol 19 : i.0, Value : <integerValue>

--------------------------------------------------

<bb 2>:
goto <bb 4>

<bb 3>:

<bb 4>:
goto <bb 3>
goto <bb 5>

<bb 5>:
goto <bb 11>

<bb 6>:
goto <bb 8>

<bb 7>:

<bb 8>:
goto <bb 9>
goto <bb 10>

<bb 9>:
goto <bb 7>
goto <bb 10>

<bb 10>:

<bb 11>:
goto <bb 6>
goto <bb 12>

<bb 12>:
goto <bb 14>

<bb 13>:

<bb 14>:
goto <bb 13>
goto <bb 15>

<bb 15>:
