/* http://www.cquestions.com/2008/01/write-c-program-for-multiplication-of.html */

#include<stdio.h>
int main(){
  int a[5][5],b[5][5],c[5][5],i,j,k,sum=0,m,n,o,p;
  printf("\nEnter the row and column of first matrix");
  scanf("%d %d",&m,&n);
  printf("\nEnter the row and column of second matrix");
  scanf("%d %d",&o,&p);
  if(n!=o){
      printf("Matrix mutiplication is not possible");
      printf("\nColumn of first matrix must be same as row of second matrix");
  }
  else{
      printf("\nEnter the First matrix->");
      for(i=0;i<m;i++)
      for(j=0;j<n;j++)
           scanf("%d",&a[i][j]);
      printf("\nEnter the Second matrix->");
      for(i=0;i<o;i++)
      for(j=0;j<p;j++)
           scanf("%d",&b[i][j]);
      printf("\nThe First matrix is\n");
      for(i=0;i<m;i++){
      printf("\n");
      for(j=0;j<n;j++){
           printf("%d\t",a[i][j]);
      }
      }
      printf("\nThe Second matrix is\n");
      for(i=0;i<o;i++){
      printf("\n");
      for(j=0;j<p;j++){
           printf("%d\t",b[i][j]);
      }       
      }
      for(i=0;i<m;i++)
      for(j=0;j<p;j++)
           c[i][j]=0;
      for(i=0;i<m;i++){ //row of first matrix
      for(j=0;j<p;j++){  //column of second matrix
           sum=0;
           for(k=0;k<n;k++)
               sum=sum+a[i][k]*b[k][j];
           c[i][j]=sum;
      }
      }
  }
  printf("\nThe multiplication of two matrix is\n");
  for(i=0;i<m;i++){
      printf("\n");
      for(j=0;j<p;j++){
           printf("%d\t",c[i][j]);
      }
  }
  return 0;
}



--------------------------------------------------

;; Function main (main)

Merging blocks 49 and 50
main ()
{
  int p;
  int o;
  int n;
  int m;
  int sum;
  int k;
  int j;
  int i;
  int c[5][5];
  int b[5][5];
  int a[5][5];
  int D.1824;
  int m.36;
  int p.35;
  const char * restrict D.1821;
  int D.1820;
  int j.34;
  int i.33;
  int m.32;
  int p.31;
  int j.30;
  int i.29;
  int n.28;
  int D.1812;
  int D.1811;
  int j.27;
  int k.26;
  int D.1808;
  int k.25;
  int i.24;
  int m.23;
  int p.22;
  int j.21;
  int i.20;
  int o.19;
  int p.18;
  const char * restrict D.1799;
  int D.1798;
  int j.17;
  int i.16;
  int m.15;
  int n.14;
  const char * restrict D.1793;
  int D.1792;
  int j.13;
  int i.12;
  int o.11;
  int p.10;
  const char * restrict D.1787;
  int * D.1786;
  unsigned int D.1785;
  unsigned int D.1784;
  unsigned int j.9;
  unsigned int D.1782;
  unsigned int i.8;
  int * b.7;
  const char * restrict D.1779;
  int m.6;
  int n.5;
  const char * restrict D.1776;
  int * D.1775;
  unsigned int D.1774;
  unsigned int D.1773;
  unsigned int j.4;
  unsigned int D.1771;
  unsigned int i.3;
  int * a.2;
  const char * restrict D.1768;
  const char * restrict D.1766;
  const char * restrict D.1765;
  int o.1;
  int n.0;
  const char * restrict D.1760;
  const char * restrict D.1759;
  const char * restrict D.1758;
  const char * restrict D.1757;

<bb 2>:
  sum = 0;
  D.1757 = (const char * restrict) "\nEnter the row and column of first matrix";
  printf (D.1757);
  D.1758 = (const char * restrict) "%d %d";
  scanf (D.1758, &m, &n);
  D.1759 = (const char * restrict) "\nEnter the row and column of second matrix";
  printf (D.1759);
  D.1760 = (const char * restrict) "%d %d";
  scanf (D.1760, &o, &p);
  n.0 = n;
  o.1 = o;
  if (n.0 != o.1)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.1765 = (const char * restrict) "Matrix mutiplication is not possible";
  printf (D.1765);
  D.1766 = (const char * restrict) "\nColumn of first matrix must be same as row of second matrix";
  printf (D.1766);
  goto <bb 43>;

<bb 4>:
  D.1768 = (const char * restrict) "\nEnter the First matrix->";
  printf (D.1768);
  i = 0;
  goto <bb 9>;

<bb 5>:
  j = 0;
  goto <bb 7>;

<bb 6>:
  a.2 = (int *) &a;
  i.3 = (unsigned int) i;
  D.1771 = i.3 * 5;
  j.4 = (unsigned int) j;
  D.1773 = D.1771 + j.4;
  D.1774 = D.1773 * 4;
  D.1775 = a.2 + D.1774;
  D.1776 = (const char * restrict) "%d";
  scanf (D.1776, D.1775);
  j = j + 1;

<bb 7>:
  n.5 = n;
  if (j < n.5)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 8>:
  i = i + 1;

<bb 9>:
  m.6 = m;
  if (i < m.6)
    goto <bb 5>;
  else
    goto <bb 10>;

<bb 10>:
  D.1779 = (const char * restrict) "\nEnter the Second matrix->";
  printf (D.1779);
  i = 0;
  goto <bb 15>;

<bb 11>:
  j = 0;
  goto <bb 13>;

<bb 12>:
  b.7 = (int *) &b;
  i.8 = (unsigned int) i;
  D.1782 = i.8 * 5;
  j.9 = (unsigned int) j;
  D.1784 = D.1782 + j.9;
  D.1785 = D.1784 * 4;
  D.1786 = b.7 + D.1785;
  D.1787 = (const char * restrict) "%d";
  scanf (D.1787, D.1786);
  j = j + 1;

<bb 13>:
  p.10 = p;
  if (j < p.10)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 14>:
  i = i + 1;

<bb 15>:
  o.11 = o;
  if (i < o.11)
    goto <bb 11>;
  else
    goto <bb 16>;

<bb 16>:
  __builtin_puts (&"\nThe First matrix is"[0]);
  i = 0;
  goto <bb 21>;

<bb 17>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 19>;

<bb 18>:
  i.12 = i;
  j.13 = j;
  D.1792 = a[i.12][j.13];
  D.1793 = (const char * restrict) "%d\t";
  printf (D.1793, D.1792);
  j = j + 1;

<bb 19>:
  n.14 = n;
  if (j < n.14)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 20>:
  i = i + 1;

<bb 21>:
  m.15 = m;
  if (i < m.15)
    goto <bb 17>;
  else
    goto <bb 22>;

<bb 22>:
  __builtin_puts (&"\nThe Second matrix is"[0]);
  i = 0;
  goto <bb 27>;

<bb 23>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 25>;

<bb 24>:
  i.16 = i;
  j.17 = j;
  D.1798 = b[i.16][j.17];
  D.1799 = (const char * restrict) "%d\t";
  printf (D.1799, D.1798);
  j = j + 1;

<bb 25>:
  p.18 = p;
  if (j < p.18)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 26>:
  i = i + 1;

<bb 27>:
  o.19 = o;
  if (i < o.19)
    goto <bb 23>;
  else
    goto <bb 28>;

<bb 28>:
  i = 0;
  goto <bb 33>;

<bb 29>:
  j = 0;
  goto <bb 31>;

<bb 30>:
  i.20 = i;
  j.21 = j;
  c[i.20][j.21] = 0;
  j = j + 1;

<bb 31>:
  p.22 = p;
  if (j < p.22)
    goto <bb 30>;
  else
    goto <bb 32>;

<bb 32>:
  i = i + 1;

<bb 33>:
  m.23 = m;
  if (i < m.23)
    goto <bb 29>;
  else
    goto <bb 34>;

<bb 34>:
  i = 0;
  goto <bb 42>;

<bb 35>:
  j = 0;
  goto <bb 40>;

<bb 36>:
  sum = 0;
  k = 0;
  goto <bb 38>;

<bb 37>:
  i.24 = i;
  k.25 = k;
  D.1808 = a[i.24][k.25];
  k.26 = k;
  j.27 = j;
  D.1811 = b[k.26][j.27];
  D.1812 = D.1808 * D.1811;
  sum = D.1812 + sum;
  k = k + 1;

<bb 38>:
  n.28 = n;
  if (k < n.28)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 39>:
  i.29 = i;
  j.30 = j;
  c[i.29][j.30] = sum;
  j = j + 1;

<bb 40>:
  p.31 = p;
  if (j < p.31)
    goto <bb 36>;
  else
    goto <bb 41>;

<bb 41>:
  i = i + 1;

<bb 42>:
  m.32 = m;
  if (i < m.32)
    goto <bb 35>;
  else
    goto <bb 43>;

<bb 43>:
  __builtin_puts (&"\nThe multiplication of two matrix is"[0]);
  i = 0;
  goto <bb 48>;

<bb 44>:
  __builtin_putchar (10);
  j = 0;
  goto <bb 46>;

<bb 45>:
  i.33 = i;
  j.34 = j;
  D.1820 = c[i.33][j.34];
  D.1821 = (const char * restrict) "%d\t";
  printf (D.1821, D.1820);
  j = j + 1;

<bb 46>:
  p.35 = p;
  if (j < p.35)
    goto <bb 45>;
  else
    goto <bb 47>;

<bb 47>:
  i = i + 1;

<bb 48>:
  m.36 = m;
  if (i < m.36)
    goto <bb 44>;
  else
    goto <bb 49>;

<bb 49>:
  D.1824 = 0;
  return D.1824;

}



--------------------------------------------------
Identifier of type integer found : p
Identifier of type integer found : o
Identifier of type integer found : n
Identifier of type integer found : m
Identifier of type integer found : sum
Identifier of type integer found : k
Identifier of type integer found : j
Identifier of type integer found : i
Integer Array Declaration : int c[5][5]
Integer Array Declaration : int b[5][5]
Integer Array Declaration : int a[5][5]
Identifier of type integer found : D.1824
Identifier of type integer found : m.36
Identifier of type integer found : p.35
Identifier of type integer found : D.1820
Identifier of type integer found : j.34
Identifier of type integer found : i.33
Identifier of type integer found : m.32
Identifier of type integer found : p.31
Identifier of type integer found : j.30
Identifier of type integer found : i.29
Identifier of type integer found : n.28
Identifier of type integer found : D.1812
Identifier of type integer found : D.1811
Identifier of type integer found : j.27
Identifier of type integer found : k.26
Identifier of type integer found : D.1808
Identifier of type integer found : k.25
Identifier of type integer found : i.24
Identifier of type integer found : m.23
Identifier of type integer found : p.22
Identifier of type integer found : j.21
Identifier of type integer found : i.20
Identifier of type integer found : o.19
Identifier of type integer found : p.18
Identifier of type integer found : D.1798
Identifier of type integer found : j.17
Identifier of type integer found : i.16
Identifier of type integer found : m.15
Identifier of type integer found : n.14
Identifier of type integer found : D.1792
Identifier of type integer found : j.13
Identifier of type integer found : i.12
Identifier of type integer found : o.11
Identifier of type integer found : p.10
Identifier of type integer found : D.1786
Identifier of type integer found : D.1785
Identifier of type integer found : D.1784
Identifier of type integer found : j.9
Identifier of type integer found : D.1782
Identifier of type integer found : i.8
Identifier of type integer found : b.7
Identifier of type integer found : m.6
Identifier of type integer found : n.5
Identifier of type integer found : D.1775
Identifier of type integer found : D.1774
Identifier of type integer found : D.1773
Identifier of type integer found : j.4
Identifier of type integer found : D.1771
Identifier of type integer found : i.3
Identifier of type integer found : a.2
Identifier of type integer found : o.1
Identifier of type integer found : n.0

Block : <bb 2>
sum = <integerValue>
printf(...)
printf(...)
printf(...)
printf(...)
n.0 = <integerValue>
o.1 = <integerValue>
if n.0!= <integerValue>, goto <bb 3>,else, goto <bb 4>

Block : <bb 3>
printf(...)
printf(...)

Block : <bb 4>
printf(...)
i = <integerValue>

Block : <bb 5>
j = <integerValue>

Block : <bb 6>
a.2 = <integerValue>
i.3 = <integerValue>
D.1771 = <integerValue>
j.4 = <integerValue>
D.1773 = <integerValue>
D.1774 = <integerValue>
D.1775 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 7>
n.5 = <integerValue>
if j< <integerValue>, goto <bb 6>,else, goto <bb 8>

Block : <bb 8>
i = <integerValue>

Block : <bb 9>
m.6 = <integerValue>
if i< <integerValue>, goto <bb 5>,else, goto <bb 10>

Block : <bb 10>
printf(...)
i = <integerValue>

Block : <bb 11>
j = <integerValue>

Block : <bb 12>
b.7 = <integerValue>
i.8 = <integerValue>
D.1782 = <integerValue>
j.9 = <integerValue>
D.1784 = <integerValue>
D.1785 = <integerValue>
D.1786 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 13>
p.10 = <integerValue>
if j< <integerValue>, goto <bb 12>,else, goto <bb 14>

Block : <bb 14>
i = <integerValue>

Block : <bb 15>
o.11 = <integerValue>
if i< <integerValue>, goto <bb 11>,else, goto <bb 16>

Block : <bb 16>
printf(...)
i = <integerValue>

Block : <bb 17>
printf(...)
j = <integerValue>

Block : <bb 18>
i.12 = <integerValue>
j.13 = <integerValue>
D.1792 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 19>
n.14 = <integerValue>
if j< <integerValue>, goto <bb 18>,else, goto <bb 20>

Block : <bb 20>
i = <integerValue>

Block : <bb 21>
m.15 = <integerValue>
if i< <integerValue>, goto <bb 17>,else, goto <bb 22>

Block : <bb 22>
printf(...)
i = <integerValue>

Block : <bb 23>
printf(...)
j = <integerValue>

Block : <bb 24>
i.16 = <integerValue>
j.17 = <integerValue>
D.1798 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 25>
p.18 = <integerValue>
if j< <integerValue>, goto <bb 24>,else, goto <bb 26>

Block : <bb 26>
i = <integerValue>

Block : <bb 27>
o.19 = <integerValue>
if i< <integerValue>, goto <bb 23>,else, goto <bb 28>

Block : <bb 28>
i = <integerValue>

Block : <bb 29>
j = <integerValue>

Block : <bb 30>
i.20 = <integerValue>
j.21 = <integerValue>
c[i.20][j.21] = <integerValue>
j = <integerValue>

Block : <bb 31>
p.22 = <integerValue>
if j< <integerValue>, goto <bb 30>,else, goto <bb 32>

Block : <bb 32>
i = <integerValue>

Block : <bb 33>
m.23 = <integerValue>
if i< <integerValue>, goto <bb 29>,else, goto <bb 34>

Block : <bb 34>
i = <integerValue>

Block : <bb 35>
j = <integerValue>

Block : <bb 36>
sum = <integerValue>
k = <integerValue>

Block : <bb 37>
i.24 = <integerValue>
k.25 = <integerValue>
D.1808 = <integerValue>
k.26 = <integerValue>
j.27 = <integerValue>
D.1811 = <integerValue>
D.1812 = <integerValue>
sum = <integerValue>
k = <integerValue>

Block : <bb 38>
n.28 = <integerValue>
if k< <integerValue>, goto <bb 37>,else, goto <bb 39>

Block : <bb 39>
i.29 = <integerValue>
j.30 = <integerValue>
c[i.29][j.30] = <integerValue>
j = <integerValue>

Block : <bb 40>
p.31 = <integerValue>
if j< <integerValue>, goto <bb 36>,else, goto <bb 41>

Block : <bb 41>
i = <integerValue>

Block : <bb 42>
m.32 = <integerValue>
if i< <integerValue>, goto <bb 35>,else, goto <bb 43>

Block : <bb 43>
printf(...)
i = <integerValue>

Block : <bb 44>
printf(...)
j = <integerValue>

Block : <bb 45>
i.33 = <integerValue>
j.34 = <integerValue>
D.1820 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 46>
p.35 = <integerValue>
if j< <integerValue>, goto <bb 45>,else, goto <bb 47>

Block : <bb 47>
i = <integerValue>

Block : <bb 48>
m.36 = <integerValue>
if i< <integerValue>, goto <bb 44>,else, goto <bb 49>

Block : <bb 49>
D.1824 = <integerValue>

Symbol table : -
Symbol 0 : p, Value : <integerValue>
Symbol 1 : o, Value : <integerValue>
Symbol 2 : n, Value : <integerValue>
Symbol 3 : m, Value : <integerValue>
Symbol 4 : sum, Value : <integerValue>
Symbol 5 : k, Value : <integerValue>
Symbol 6 : j, Value : <integerValue>
Symbol 7 : i, Value : <integerValue>
Symbol 8 : D.1824, Value : <integerValue>
Symbol 9 : m.36, Value : <integerValue>
Symbol 10 : p.35, Value : <integerValue>
Symbol 11 : D.1820, Value : <integerValue>
Symbol 12 : j.34, Value : <integerValue>
Symbol 13 : i.33, Value : <integerValue>
Symbol 14 : m.32, Value : <integerValue>
Symbol 15 : p.31, Value : <integerValue>
Symbol 16 : j.30, Value : <integerValue>
Symbol 17 : i.29, Value : <integerValue>
Symbol 18 : n.28, Value : <integerValue>
Symbol 19 : D.1812, Value : <integerValue>
Symbol 20 : D.1811, Value : <integerValue>
Symbol 21 : j.27, Value : <integerValue>
Symbol 22 : k.26, Value : <integerValue>
Symbol 23 : D.1808, Value : <integerValue>
Symbol 24 : k.25, Value : <integerValue>
Symbol 25 : i.24, Value : <integerValue>
Symbol 26 : m.23, Value : <integerValue>
Symbol 27 : p.22, Value : <integerValue>
Symbol 28 : j.21, Value : <integerValue>
Symbol 29 : i.20, Value : <integerValue>
Symbol 30 : o.19, Value : <integerValue>
Symbol 31 : p.18, Value : <integerValue>
Symbol 32 : D.1798, Value : <integerValue>
Symbol 33 : j.17, Value : <integerValue>
Symbol 34 : i.16, Value : <integerValue>
Symbol 35 : m.15, Value : <integerValue>
Symbol 36 : n.14, Value : <integerValue>
Symbol 37 : D.1792, Value : <integerValue>
Symbol 38 : j.13, Value : <integerValue>
Symbol 39 : i.12, Value : <integerValue>
Symbol 40 : o.11, Value : <integerValue>
Symbol 41 : p.10, Value : <integerValue>
Symbol 42 : D.1786, Value : <integerValue>
Symbol 43 : D.1785, Value : <integerValue>
Symbol 44 : D.1784, Value : <integerValue>
Symbol 45 : j.9, Value : <integerValue>
Symbol 46 : D.1782, Value : <integerValue>
Symbol 47 : i.8, Value : <integerValue>
Symbol 48 : b.7, Value : <integerValue>
Symbol 49 : m.6, Value : <integerValue>
Symbol 50 : n.5, Value : <integerValue>
Symbol 51 : D.1775, Value : <integerValue>
Symbol 52 : D.1774, Value : <integerValue>
Symbol 53 : D.1773, Value : <integerValue>
Symbol 54 : j.4, Value : <integerValue>
Symbol 55 : D.1771, Value : <integerValue>
Symbol 56 : i.3, Value : <integerValue>
Symbol 57 : a.2, Value : <integerValue>
Symbol 58 : o.1, Value : <integerValue>
Symbol 59 : n.0, Value : <integerValue>

--------------------------------------------------

<bb 2>:
goto <bb 3>
goto <bb 4>

<bb 3>:
goto <bb 43>

<bb 4>:
goto <bb 9>

<bb 5>:
goto <bb 7>

<bb 6>:

<bb 7>:
goto <bb 6>
goto <bb 8>

<bb 8>:

<bb 9>:
goto <bb 5>
goto <bb 10>

<bb 10>:
goto <bb 15>

<bb 11>:
goto <bb 13>

<bb 12>:

<bb 13>:
goto <bb 12>
goto <bb 14>

<bb 14>:

<bb 15>:
goto <bb 11>
goto <bb 16>

<bb 16>:
goto <bb 21>

<bb 17>:
goto <bb 19>

<bb 18>:

<bb 19>:
goto <bb 18>
goto <bb 20>

<bb 20>:

<bb 21>:
goto <bb 17>
goto <bb 22>

<bb 22>:
goto <bb 27>

<bb 23>:
goto <bb 25>

<bb 24>:

<bb 25>:
goto <bb 24>
goto <bb 26>

<bb 26>:

<bb 27>:
goto <bb 23>
goto <bb 28>

<bb 28>:
goto <bb 33>

<bb 29>:
goto <bb 31>

<bb 30>:

<bb 31>:
goto <bb 30>
goto <bb 32>

<bb 32>:

<bb 33>:
goto <bb 29>
goto <bb 34>

<bb 34>:
goto <bb 42>

<bb 35>:
goto <bb 40>

<bb 36>:
goto <bb 38>

<bb 37>:

<bb 38>:
goto <bb 37>
goto <bb 39>

<bb 39>:

<bb 40>:
goto <bb 36>
goto <bb 41>

<bb 41>:

<bb 42>:
goto <bb 35>
goto <bb 43>

<bb 43>:
goto <bb 48>

<bb 44>:
goto <bb 46>

<bb 45>:

<bb 46>:
goto <bb 45>
goto <bb 47>

<bb 47>:

<bb 48>:
goto <bb 44>
goto <bb 49>

<bb 49>:
