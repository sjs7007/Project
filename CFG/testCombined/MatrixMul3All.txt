
#include <stdio.h>
int main()
{
    int a[10][10], b[10][10], mult[10][10], r1, c1, r2, c2, i, j, k;
    printf("Enter rows and column for first matrix: ");
    scanf("%d%d", &r1, &c1);
    printf("Enter rows and column for second matrix: ");
    scanf("%d%d",&r2, &c2);

/* If colum of first matrix in not equal to row of second matrix, asking user to enter the size of matrix again. */
    while (c1!=r2)
    {
        printf("Error! column of first matrix not equal to row of second.\n");
        printf("Enter rows and column for first matrix: ");
        scanf("%d%d", &r1, &c1);
        printf("Enter rows and column for second matrix: ");
        scanf("%d%d",&r2, &c2);
    }

/* Storing elements of first matrix. */
    printf("\nEnter elements of matrix 1:\n");
    for(i=0; i<r1; ++i)
    for(j=0; j<c1; ++j)
    {
        printf("Enter elements a%d%d: ",i+1,j+1);
        scanf("%d",&a[i][j]);
    }

/* Storing elements of second matrix. */
    printf("\nEnter elements of matrix 2:\n");
    for(i=0; i<r2; ++i)
    for(j=0; j<c2; ++j)
    {
        printf("Enter elements b%d%d: ",i+1,j+1);
        scanf("%d",&b[i][j]);
    }

/* Initializing elements of matrix mult to 0.*/
    for(i=0; i<r1; ++i)
    for(j=0; j<c2; ++j)
    {
       mult[i][j]=0;
    }

/* Multiplying matrix a and b and storing in array mult. */
    for(i=0; i<r1; ++i)
    for(j=0; j<c2; ++j)
    for(k=0; k<c1; ++k)
    {
        mult[i][j]+=a[i][k]*b[k][j];
    }

/* Displaying the multiplication of two matrix. */
    printf("\nOutput Matrix:\n");
    for(i=0; i<r1; ++i)
    for(j=0; j<c2; ++j)
    {
        printf("%d  ",mult[i][j]);
        if(j==c2-1)
            printf("\n\n");
    }
    return 0;
}

--------------------------------------------------

;; Function main (main)

Merging blocks 40 and 41
main ()
{
  int k;
  int j;
  int i;
  int c2;
  int r2;
  int c1;
  int r1;
  int mult[10][10];
  int b[10][10];
  int a[10][10];
  int D.1813;
  int r1.31;
  int c2.30;
  int D.1808;
  int c2.29;
  const char * restrict D.1806;
  int D.1805;
  int j.28;
  int i.27;
  int r1.26;
  int c2.25;
  int c1.24;
  int D.1799;
  int D.1798;
  int D.1797;
  int j.23;
  int k.22;
  int D.1794;
  int k.21;
  int i.20;
  int D.1791;
  int j.19;
  int i.18;
  int j.17;
  int i.16;
  int r1.15;
  int c2.14;
  int j.13;
  int i.12;
  int r2.11;
  int c2.10;
  const char * restrict D.1780;
  int * D.1779;
  unsigned int D.1778;
  unsigned int D.1777;
  unsigned int j.9;
  unsigned int D.1775;
  unsigned int i.8;
  int * b.7;
  const char * restrict D.1772;
  int D.1771;
  int D.1770;
  int r1.6;
  int c1.5;
  const char * restrict D.1767;
  int * D.1766;
  unsigned int D.1765;
  unsigned int D.1764;
  unsigned int j.4;
  unsigned int D.1762;
  unsigned int i.3;
  int * a.2;
  const char * restrict D.1759;
  int D.1758;
  int D.1757;
  int r2.1;
  int c1.0;
  const char * restrict D.1754;
  const char * restrict D.1753;
  const char * restrict D.1752;
  const char * restrict D.1751;
  const char * restrict D.1750;
  const char * restrict D.1749;
  const char * restrict D.1748;
  const char * restrict D.1747;

<bb 2>:
  D.1747 = (const char * restrict) "Enter rows and column for first matrix: ";
  printf (D.1747);
  D.1748 = (const char * restrict) "%d%d";
  scanf (D.1748, &r1, &c1);
  D.1749 = (const char * restrict) "Enter rows and column for second matrix: ";
  printf (D.1749);
  D.1750 = (const char * restrict) "%d%d";
  scanf (D.1750, &r2, &c2);
  goto <bb 4>;

<bb 3>:
  __builtin_puts (&"Error! column of first matrix not equal to row of second."[0]);
  D.1751 = (const char * restrict) "Enter rows and column for first matrix: ";
  printf (D.1751);
  D.1752 = (const char * restrict) "%d%d";
  scanf (D.1752, &r1, &c1);
  D.1753 = (const char * restrict) "Enter rows and column for second matrix: ";
  printf (D.1753);
  D.1754 = (const char * restrict) "%d%d";
  scanf (D.1754, &r2, &c2);

<bb 4>:
  c1.0 = c1;
  r2.1 = r2;
  if (c1.0 != r2.1)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  __builtin_puts (&"\nEnter elements of matrix 1:"[0]);
  i = 0;
  goto <bb 10>;

<bb 6>:
  j = 0;
  goto <bb 8>;

<bb 7>:
  D.1757 = j + 1;
  D.1758 = i + 1;
  D.1759 = (const char * restrict) "Enter elements a%d%d: ";
  printf (D.1759, D.1758, D.1757);
  a.2 = (int *) &a;
  i.3 = (unsigned int) i;
  D.1762 = i.3 * 10;
  j.4 = (unsigned int) j;
  D.1764 = D.1762 + j.4;
  D.1765 = D.1764 * 4;
  D.1766 = a.2 + D.1765;
  D.1767 = (const char * restrict) "%d";
  scanf (D.1767, D.1766);
  j = j + 1;

<bb 8>:
  c1.5 = c1;
  if (j < c1.5)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 9>:
  i = i + 1;

<bb 10>:
  r1.6 = r1;
  if (i < r1.6)
    goto <bb 6>;
  else
    goto <bb 11>;

<bb 11>:
  __builtin_puts (&"\nEnter elements of matrix 2:"[0]);
  i = 0;
  goto <bb 16>;

<bb 12>:
  j = 0;
  goto <bb 14>;

<bb 13>:
  D.1770 = j + 1;
  D.1771 = i + 1;
  D.1772 = (const char * restrict) "Enter elements b%d%d: ";
  printf (D.1772, D.1771, D.1770);
  b.7 = (int *) &b;
  i.8 = (unsigned int) i;
  D.1775 = i.8 * 10;
  j.9 = (unsigned int) j;
  D.1777 = D.1775 + j.9;
  D.1778 = D.1777 * 4;
  D.1779 = b.7 + D.1778;
  D.1780 = (const char * restrict) "%d";
  scanf (D.1780, D.1779);
  j = j + 1;

<bb 14>:
  c2.10 = c2;
  if (j < c2.10)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 15>:
  i = i + 1;

<bb 16>:
  r2.11 = r2;
  if (i < r2.11)
    goto <bb 12>;
  else
    goto <bb 17>;

<bb 17>:
  i = 0;
  goto <bb 22>;

<bb 18>:
  j = 0;
  goto <bb 20>;

<bb 19>:
  i.12 = i;
  j.13 = j;
  mult[i.12][j.13] = 0;
  j = j + 1;

<bb 20>:
  c2.14 = c2;
  if (j < c2.14)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 21>:
  i = i + 1;

<bb 22>:
  r1.15 = r1;
  if (i < r1.15)
    goto <bb 18>;
  else
    goto <bb 23>;

<bb 23>:
  i = 0;
  goto <bb 31>;

<bb 24>:
  j = 0;
  goto <bb 29>;

<bb 25>:
  k = 0;
  goto <bb 27>;

<bb 26>:
  i.16 = i;
  j.17 = j;
  i.18 = i;
  j.19 = j;
  D.1791 = mult[i.18][j.19];
  i.20 = i;
  k.21 = k;
  D.1794 = a[i.20][k.21];
  k.22 = k;
  j.23 = j;
  D.1797 = b[k.22][j.23];
  D.1798 = D.1794 * D.1797;
  D.1799 = D.1791 + D.1798;
  mult[i.16][j.17] = D.1799;
  k = k + 1;

<bb 27>:
  c1.24 = c1;
  if (k < c1.24)
    goto <bb 26>;
  else
    goto <bb 28>;

<bb 28>:
  j = j + 1;

<bb 29>:
  c2.25 = c2;
  if (j < c2.25)
    goto <bb 25>;
  else
    goto <bb 30>;

<bb 30>:
  i = i + 1;

<bb 31>:
  r1.26 = r1;
  if (i < r1.26)
    goto <bb 24>;
  else
    goto <bb 32>;

<bb 32>:
  __builtin_puts (&"\nOutput Matrix:"[0]);
  i = 0;
  goto <bb 39>;

<bb 33>:
  j = 0;
  goto <bb 37>;

<bb 34>:
  i.27 = i;
  j.28 = j;
  D.1805 = mult[i.27][j.28];
  D.1806 = (const char * restrict) "%d  ";
  printf (D.1806, D.1805);
  c2.29 = c2;
  D.1808 = c2.29 + -1;
  if (D.1808 == j)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  __builtin_puts (&"\n"[0]);

<bb 36>:
  j = j + 1;

<bb 37>:
  c2.30 = c2;
  if (j < c2.30)
    goto <bb 34>;
  else
    goto <bb 38>;

<bb 38>:
  i = i + 1;

<bb 39>:
  r1.31 = r1;
  if (i < r1.31)
    goto <bb 33>;
  else
    goto <bb 40>;

<bb 40>:
  D.1813 = 0;
  return D.1813;

}



--------------------------------------------------
Identifier of type integer found : k
Identifier of type integer found : j
Identifier of type integer found : i
Identifier of type integer found : c2
Identifier of type integer found : r2
Identifier of type integer found : c1
Identifier of type integer found : r1
Integer Array Declaration : int mult[10][10]
Integer Array Declaration : int b[10][10]
Integer Array Declaration : int a[10][10]
Identifier of type integer found : D.1813
Identifier of type integer found : r1.31
Identifier of type integer found : c2.30
Identifier of type integer found : D.1808
Identifier of type integer found : c2.29
Identifier of type integer found : D.1805
Identifier of type integer found : j.28
Identifier of type integer found : i.27
Identifier of type integer found : r1.26
Identifier of type integer found : c2.25
Identifier of type integer found : c1.24
Identifier of type integer found : D.1799
Identifier of type integer found : D.1798
Identifier of type integer found : D.1797
Identifier of type integer found : j.23
Identifier of type integer found : k.22
Identifier of type integer found : D.1794
Identifier of type integer found : k.21
Identifier of type integer found : i.20
Identifier of type integer found : D.1791
Identifier of type integer found : j.19
Identifier of type integer found : i.18
Identifier of type integer found : j.17
Identifier of type integer found : i.16
Identifier of type integer found : r1.15
Identifier of type integer found : c2.14
Identifier of type integer found : j.13
Identifier of type integer found : i.12
Identifier of type integer found : r2.11
Identifier of type integer found : c2.10
Identifier of type integer found : D.1779
Identifier of type integer found : D.1778
Identifier of type integer found : D.1777
Identifier of type integer found : j.9
Identifier of type integer found : D.1775
Identifier of type integer found : i.8
Identifier of type integer found : b.7
Identifier of type integer found : D.1771
Identifier of type integer found : D.1770
Identifier of type integer found : r1.6
Identifier of type integer found : c1.5
Identifier of type integer found : D.1766
Identifier of type integer found : D.1765
Identifier of type integer found : D.1764
Identifier of type integer found : j.4
Identifier of type integer found : D.1762
Identifier of type integer found : i.3
Identifier of type integer found : a.2
Identifier of type integer found : D.1758
Identifier of type integer found : D.1757
Identifier of type integer found : r2.1
Identifier of type integer found : c1.0

Block : <bb 2>
printf(...)
printf(...)
printf(...)
printf(...)

Block : <bb 3>
printf(...)
printf(...)
printf(...)
printf(...)
printf(...)

Block : <bb 4>
c1.0 = <integerValue>
r2.1 = <integerValue>
if c1.0!= <integerValue>, goto <bb 3>,else, goto <bb 5>

Block : <bb 5>
printf(...)
i = <integerValue>

Block : <bb 6>
j = <integerValue>

Block : <bb 7>
D.1757 = <integerValue>
D.1758 = <integerValue>
printf(...)
a.2 = <integerValue>
i.3 = <integerValue>
D.1762 = <integerValue>
j.4 = <integerValue>
D.1764 = <integerValue>
D.1765 = <integerValue>
D.1766 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 8>
c1.5 = <integerValue>
if j< <integerValue>, goto <bb 7>,else, goto <bb 9>

Block : <bb 9>
i = <integerValue>

Block : <bb 10>
r1.6 = <integerValue>
if i< <integerValue>, goto <bb 6>,else, goto <bb 11>

Block : <bb 11>
printf(...)
i = <integerValue>

Block : <bb 12>
j = <integerValue>

Block : <bb 13>
D.1770 = <integerValue>
D.1771 = <integerValue>
printf(...)
b.7 = <integerValue>
i.8 = <integerValue>
D.1775 = <integerValue>
j.9 = <integerValue>
D.1777 = <integerValue>
D.1778 = <integerValue>
D.1779 = <integerValue>
printf(...)
j = <integerValue>

Block : <bb 14>
c2.10 = <integerValue>
if j< <integerValue>, goto <bb 13>,else, goto <bb 15>

Block : <bb 15>
i = <integerValue>

Block : <bb 16>
r2.11 = <integerValue>
if i< <integerValue>, goto <bb 12>,else, goto <bb 17>

Block : <bb 17>
i = <integerValue>

Block : <bb 18>
j = <integerValue>

Block : <bb 19>
i.12 = <integerValue>
j.13 = <integerValue>
mult[i.12][j.13] = <integerValue>
j = <integerValue>

Block : <bb 20>
c2.14 = <integerValue>
if j< <integerValue>, goto <bb 19>,else, goto <bb 21>

Block : <bb 21>
i = <integerValue>

Block : <bb 22>
r1.15 = <integerValue>
if i< <integerValue>, goto <bb 18>,else, goto <bb 23>

Block : <bb 23>
i = <integerValue>

Block : <bb 24>
j = <integerValue>

Block : <bb 25>
k = <integerValue>

Block : <bb 26>
i.16 = <integerValue>
j.17 = <integerValue>
i.18 = <integerValue>
j.19 = <integerValue>
D.1791 = <integerValue>
i.20 = <integerValue>
k.21 = <integerValue>
D.1794 = <integerValue>
k.22 = <integerValue>
j.23 = <integerValue>
D.1797 = <integerValue>
D.1798 = <integerValue>
D.1799 = <integerValue>
mult[i.16][j.17] = <integerValue>
k = <integerValue>

Block : <bb 27>
c1.24 = <integerValue>
if k< <integerValue>, goto <bb 26>,else, goto <bb 28>

Block : <bb 28>
j = <integerValue>

Block : <bb 29>
c2.25 = <integerValue>
if j< <integerValue>, goto <bb 25>,else, goto <bb 30>

Block : <bb 30>
i = <integerValue>

Block : <bb 31>
r1.26 = <integerValue>
if i< <integerValue>, goto <bb 24>,else, goto <bb 32>

Block : <bb 32>
printf(...)
i = <integerValue>

Block : <bb 33>
j = <integerValue>

Block : <bb 34>
i.27 = <integerValue>
j.28 = <integerValue>
D.1805 = <integerValue>
printf(...)
c2.29 = <integerValue>
D.1808 = <integerValue>
if D.1808== <integerValue>, goto <bb 35>,else, goto <bb 36>

Block : <bb 35>
printf(...)

Block : <bb 36>
j = <integerValue>

Block : <bb 37>
c2.30 = <integerValue>
if j< <integerValue>, goto <bb 34>,else, goto <bb 38>

Block : <bb 38>
i = <integerValue>

Block : <bb 39>
r1.31 = <integerValue>
if i< <integerValue>, goto <bb 33>,else, goto <bb 40>

Block : <bb 40>
D.1813 = <integerValue>

Symbol table : -
Symbol 0 : k, Value : <integerValue>
Symbol 1 : j, Value : <integerValue>
Symbol 2 : i, Value : <integerValue>
Symbol 3 : c2, Value : <integerValue>
Symbol 4 : r2, Value : <integerValue>
Symbol 5 : c1, Value : <integerValue>
Symbol 6 : r1, Value : <integerValue>
Symbol 7 : D.1813, Value : <integerValue>
Symbol 8 : r1.31, Value : <integerValue>
Symbol 9 : c2.30, Value : <integerValue>
Symbol 10 : D.1808, Value : <integerValue>
Symbol 11 : c2.29, Value : <integerValue>
Symbol 12 : D.1805, Value : <integerValue>
Symbol 13 : j.28, Value : <integerValue>
Symbol 14 : i.27, Value : <integerValue>
Symbol 15 : r1.26, Value : <integerValue>
Symbol 16 : c2.25, Value : <integerValue>
Symbol 17 : c1.24, Value : <integerValue>
Symbol 18 : D.1799, Value : <integerValue>
Symbol 19 : D.1798, Value : <integerValue>
Symbol 20 : D.1797, Value : <integerValue>
Symbol 21 : j.23, Value : <integerValue>
Symbol 22 : k.22, Value : <integerValue>
Symbol 23 : D.1794, Value : <integerValue>
Symbol 24 : k.21, Value : <integerValue>
Symbol 25 : i.20, Value : <integerValue>
Symbol 26 : D.1791, Value : <integerValue>
Symbol 27 : j.19, Value : <integerValue>
Symbol 28 : i.18, Value : <integerValue>
Symbol 29 : j.17, Value : <integerValue>
Symbol 30 : i.16, Value : <integerValue>
Symbol 31 : r1.15, Value : <integerValue>
Symbol 32 : c2.14, Value : <integerValue>
Symbol 33 : j.13, Value : <integerValue>
Symbol 34 : i.12, Value : <integerValue>
Symbol 35 : r2.11, Value : <integerValue>
Symbol 36 : c2.10, Value : <integerValue>
Symbol 37 : D.1779, Value : <integerValue>
Symbol 38 : D.1778, Value : <integerValue>
Symbol 39 : D.1777, Value : <integerValue>
Symbol 40 : j.9, Value : <integerValue>
Symbol 41 : D.1775, Value : <integerValue>
Symbol 42 : i.8, Value : <integerValue>
Symbol 43 : b.7, Value : <integerValue>
Symbol 44 : D.1771, Value : <integerValue>
Symbol 45 : D.1770, Value : <integerValue>
Symbol 46 : r1.6, Value : <integerValue>
Symbol 47 : c1.5, Value : <integerValue>
Symbol 48 : D.1766, Value : <integerValue>
Symbol 49 : D.1765, Value : <integerValue>
Symbol 50 : D.1764, Value : <integerValue>
Symbol 51 : j.4, Value : <integerValue>
Symbol 52 : D.1762, Value : <integerValue>
Symbol 53 : i.3, Value : <integerValue>
Symbol 54 : a.2, Value : <integerValue>
Symbol 55 : D.1758, Value : <integerValue>
Symbol 56 : D.1757, Value : <integerValue>
Symbol 57 : r2.1, Value : <integerValue>
Symbol 58 : c1.0, Value : <integerValue>

--------------------------------------------------

<bb 2>:
goto <bb 4>

<bb 3>:

<bb 4>:
goto <bb 3>
goto <bb 5>

<bb 5>:
goto <bb 10>

<bb 6>:
goto <bb 8>

<bb 7>:

<bb 8>:
goto <bb 7>
goto <bb 9>

<bb 9>:

<bb 10>:
goto <bb 6>
goto <bb 11>

<bb 11>:
goto <bb 16>

<bb 12>:
goto <bb 14>

<bb 13>:

<bb 14>:
goto <bb 13>
goto <bb 15>

<bb 15>:

<bb 16>:
goto <bb 12>
goto <bb 17>

<bb 17>:
goto <bb 22>

<bb 18>:
goto <bb 20>

<bb 19>:

<bb 20>:
goto <bb 19>
goto <bb 21>

<bb 21>:

<bb 22>:
goto <bb 18>
goto <bb 23>

<bb 23>:
goto <bb 31>

<bb 24>:
goto <bb 29>

<bb 25>:
goto <bb 27>

<bb 26>:

<bb 27>:
goto <bb 26>
goto <bb 28>

<bb 28>:

<bb 29>:
goto <bb 25>
goto <bb 30>

<bb 30>:

<bb 31>:
goto <bb 24>
goto <bb 32>

<bb 32>:
goto <bb 39>

<bb 33>:
goto <bb 37>

<bb 34>:
goto <bb 35>
goto <bb 36>

<bb 35>:

<bb 36>:

<bb 37>:
goto <bb 34>
goto <bb 38>

<bb 38>:

<bb 39>:
goto <bb 33>
goto <bb 40>

<bb 40>:
