/* http://www.programiz.com/article/selection-sort-algorithm-programming */

#include <stdio.h>
int main()
 {
    int data[100],i,n,steps,temp;
    printf("Enter the number of elements to be sorted: ");
    scanf("%d",&n);
    for(i=0;i<n;++i)
      {
       printf("%d. Enter element: ",i+1);
       scanf("%d",&data[i]);
    }
    for(steps=0;steps<n;++steps)
    for(i=steps+1;i<n;++i)
     {
         if(data[steps]>data[i])  
/* To sort in descending order, change > to <. */
          {
             temp=data[steps];
             data[steps]=data[i]; 
             data[i]=temp;
         }
    }
    printf("In ascending order: ");
    for(i=0;i<n;++i)
        printf("%d  ",data[i]);
    return 0;
}

--------------------------------------------------

;; Function main (main)

Merging blocks 16 and 17
main ()
{
  int temp;
  int steps;
  int n;
  int i;
  int data[100];
  int D.1745;
  int n.11;
  const char * restrict D.1743;
  int D.1742;
  int i.10;
  const char * restrict D.1740;
  int n.9;
  int n.8;
  int i.7;
  int D.1736;
  int i.6;
  int steps.5;
  int steps.4;
  int D.1730;
  int i.3;
  int D.1728;
  int steps.2;
  int n.1;
  const char * restrict D.1725;
  int * D.1724;
  unsigned int D.1723;
  unsigned int i.0;
  const char * restrict D.1721;
  int D.1720;
  const char * restrict D.1719;
  const char * restrict D.1718;

<bb 2>:
  D.1718 = (const char * restrict) "Enter the number of elements to be sorted: ";
  printf (D.1718);
  D.1719 = (const char * restrict) "%d";
  scanf (D.1719, &n);
  i = 0;
  goto <bb 4>;

<bb 3>:
  D.1720 = i + 1;
  D.1721 = (const char * restrict) "%d. Enter element: ";
  printf (D.1721, D.1720);
  i.0 = (unsigned int) i;
  D.1723 = i.0 * 4;
  D.1724 = &data + D.1723;
  D.1725 = (const char * restrict) "%d";
  scanf (D.1725, D.1724);
  i = i + 1;

<bb 4>:
  n.1 = n;
  if (i < n.1)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  steps = 0;
  goto <bb 12>;

<bb 6>:
  i = steps + 1;
  goto <bb 10>;

<bb 7>:
  steps.2 = steps;
  D.1728 = data[steps.2];
  i.3 = i;
  D.1730 = data[i.3];
  if (D.1728 > D.1730)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  steps.4 = steps;
  temp = data[steps.4];
  steps.5 = steps;
  i.6 = i;
  D.1736 = data[i.6];
  data[steps.5] = D.1736;
  i.7 = i;
  data[i.7] = temp;

<bb 9>:
  i = i + 1;

<bb 10>:
  n.8 = n;
  if (i < n.8)
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 11>:
  steps = steps + 1;

<bb 12>:
  n.9 = n;
  if (steps < n.9)
    goto <bb 6>;
  else
    goto <bb 13>;

<bb 13>:
  D.1740 = (const char * restrict) "In ascending order: ";
  printf (D.1740);
  i = 0;
  goto <bb 15>;

<bb 14>:
  i.10 = i;
  D.1742 = data[i.10];
  D.1743 = (const char * restrict) "%d  ";
  printf (D.1743, D.1742);
  i = i + 1;

<bb 15>:
  n.11 = n;
  if (i < n.11)
    goto <bb 14>;
  else
    goto <bb 16>;

<bb 16>:
  D.1745 = 0;
  return D.1745;

}



--------------------------------------------------
Identifier of type integer found : temp
Identifier of type integer found : steps
Identifier of type integer found : n
Identifier of type integer found : i
Integer Array Declaration : int data[100]
Identifier of type integer found : D.1745
Identifier of type integer found : n.11
Identifier of type integer found : D.1742
Identifier of type integer found : i.10
Identifier of type integer found : n.9
Identifier of type integer found : n.8
Identifier of type integer found : i.7
Identifier of type integer found : D.1736
Identifier of type integer found : i.6
Identifier of type integer found : steps.5
Identifier of type integer found : steps.4
Identifier of type integer found : D.1730
Identifier of type integer found : i.3
Identifier of type integer found : D.1728
Identifier of type integer found : steps.2
Identifier of type integer found : n.1
Identifier of type integer found : D.1724
Identifier of type integer found : D.1723
Identifier of type integer found : i.0
Identifier of type integer found : D.1720

Block : <bb 2>
printf(...)
printf(...)
i = <integerValue>

Block : <bb 3>
D.1720 = <integerValue>
printf(...)
i.0 = <integerValue>
D.1723 = <integerValue>
D.1724 = <integerValue>
printf(...)
i = <integerValue>

Block : <bb 4>
n.1 = <integerValue>
if i< <integerValue>, goto <bb 3>,else, goto <bb 5>

Block : <bb 5>
steps = <integerValue>

Block : <bb 6>
i = <integerValue>

Block : <bb 7>
steps.2 = <integerValue>
D.1728 = <integerValue>
i.3 = <integerValue>
D.1730 = <integerValue>
if D.1728> <integerValue>, goto <bb 8>,else, goto <bb 9>

Block : <bb 8>
steps.4 = <integerValue>
temp = <integerValue>
steps.5 = <integerValue>
i.6 = <integerValue>
D.1736 = <integerValue>
data[steps.5] = <integerValue>
i.7 = <integerValue>
data[i.7] = <integerValue>

Block : <bb 9>
i = <integerValue>

Block : <bb 10>
n.8 = <integerValue>
if i< <integerValue>, goto <bb 7>,else, goto <bb 11>

Block : <bb 11>
steps = <integerValue>

Block : <bb 12>
n.9 = <integerValue>
if steps< <integerValue>, goto <bb 6>,else, goto <bb 13>

Block : <bb 13>
printf(...)
i = <integerValue>

Block : <bb 14>
i.10 = <integerValue>
D.1742 = <integerValue>
printf(...)
i = <integerValue>

Block : <bb 15>
n.11 = <integerValue>
if i< <integerValue>, goto <bb 14>,else, goto <bb 16>

Block : <bb 16>
D.1745 = <integerValue>

Symbol table : -
Symbol 0 : temp, Value : <integerValue>
Symbol 1 : steps, Value : <integerValue>
Symbol 2 : n, Value : <integerValue>
Symbol 3 : i, Value : <integerValue>
Symbol 4 : D.1745, Value : <integerValue>
Symbol 5 : n.11, Value : <integerValue>
Symbol 6 : D.1742, Value : <integerValue>
Symbol 7 : i.10, Value : <integerValue>
Symbol 8 : n.9, Value : <integerValue>
Symbol 9 : n.8, Value : <integerValue>
Symbol 10 : i.7, Value : <integerValue>
Symbol 11 : D.1736, Value : <integerValue>
Symbol 12 : i.6, Value : <integerValue>
Symbol 13 : steps.5, Value : <integerValue>
Symbol 14 : steps.4, Value : <integerValue>
Symbol 15 : D.1730, Value : <integerValue>
Symbol 16 : i.3, Value : <integerValue>
Symbol 17 : D.1728, Value : <integerValue>
Symbol 18 : steps.2, Value : <integerValue>
Symbol 19 : n.1, Value : <integerValue>
Symbol 20 : D.1724, Value : <integerValue>
Symbol 21 : D.1723, Value : <integerValue>
Symbol 22 : i.0, Value : <integerValue>
Symbol 23 : D.1720, Value : <integerValue>

--------------------------------------------------

<bb 2>:
goto <bb 4>

<bb 3>:

<bb 4>:
goto <bb 3>
goto <bb 5>

<bb 5>:
goto <bb 12>

<bb 6>:
goto <bb 10>

<bb 7>:
goto <bb 8>
goto <bb 9>

<bb 8>:

<bb 9>:

<bb 10>:
goto <bb 7>
goto <bb 11>

<bb 11>:

<bb 12>:
goto <bb 6>
goto <bb 13>

<bb 13>:
goto <bb 15>

<bb 14>:

<bb 15>:
goto <bb 14>
goto <bb 16>

<bb 16>:
