
;; Function main (main)

Merging blocks 14 and 15
main ()
{
  int multiply[10][10];
  int second[10][10];
  int first[10][10];
  int sum;
  int k;
  int d;
  int c;
  int q;
  int p;
  int n;
  int m;
  int D.1740;
  int m.10;
  int q.9;
  int d.8;
  int c.7;
  int p.6;
  int D.1734;
  int D.1733;
  int d.5;
  int k.4;
  int D.1730;
  int k.3;
  int c.2;
  int p.1;
  int n.0;
  const char * restrict D.1722;
  const char * restrict D.1721;

<bb 2>:
  sum = 0;
  __builtin_puts (&"Enter the number of rows and columns of first matrix"[0]);
  D.1721 = (const char * restrict) "%d%d";
  scanf (D.1721, &m, &n);
  __builtin_puts (&"Enter the elements of first matrix"[0]);
  __builtin_puts (&"Enter the number of rows and columns of second matrix"[0]);
  D.1722 = (const char * restrict) "%d%d";
  scanf (D.1722, &p, &q);
  n.0 = n;
  p.1 = p;
  if (n.0 != p.1)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __builtin_puts (&"Matrices with entered orders can\'t be multiplied with each other."[0]);
  goto <bb 14>;

<bb 4>:
  __builtin_puts (&"Enter the elements of second matrix"[0]);
  c = 0;
  goto <bb 12>;

<bb 5>:
  d = 0;
  goto <bb 10>;

<bb 6>:
  k = 0;
  goto <bb 8>;

<bb 7>:
  c.2 = c;
  k.3 = k;
  D.1730 = first[c.2][k.3];
  k.4 = k;
  d.5 = d;
  D.1733 = second[k.4][d.5];
  D.1734 = D.1730 * D.1733;
  sum = D.1734 + sum;
  k = k + 1;

<bb 8>:
  p.6 = p;
  if (k < p.6)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 9>:
  c.7 = c;
  d.8 = d;
  multiply[c.7][d.8] = sum;
  sum = 0;
  d = d + 1;

<bb 10>:
  q.9 = q;
  if (d < q.9)
    goto <bb 6>;
  else
    goto <bb 11>;

<bb 11>:
  c = c + 1;

<bb 12>:
  m.10 = m;
  if (c < m.10)
    goto <bb 5>;
  else
    goto <bb 13>;

<bb 13>:
  __builtin_puts (&"Product of entered matrices:-"[0]);

<bb 14>:
  D.1740 = 0;
  return D.1740;

}


